version: "3.9"

services:
  db:
    image: postgres:15-alpine
    environment:
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}    # good â€” lets the image create the "forum" DB
    volumes:
      - db-data:/var/lib/postgresql/data
      #- ./docker/01-init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./docker/01-init.sh:/docker-entrypoint-initdb.d/01-init.sh:ro
      # keep only the .sh in initdb.d:
      - ./docker/02-seed.sh:/docker-entrypoint-initdb.d/02-seed.sh:ro
      # mount the dump OUTSIDE initdb.d so it won't auto-run:
      - ./forum_d.sql:/seed/forum_d.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d forum || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30

  web:
    user: "${HOST_UID}:${HOST_GID}"
    build: .
    container_name: project_web
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    # --- DEV: auto-reload with your local code ---
    volumes:
      - .:/app
    # --- PROD-ish: switch to gunicorn (see comment in Dockerfile) ---
    # command: ["gunicorn", "-b", "0.0.0.0:8000", "forum-sandbox.wsgi:application"]
    # If that import errors due to the hyphen, change to: forum_sandbox.wsgi:application

volumes:
  db-data: